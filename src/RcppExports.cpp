// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// scanBEDMatrix
arma::mat scanBEDMatrix(SEXP xptr, arma::ivec i, arma::ivec j);
RcppExport SEXP _FastReg_scanBEDMatrix(SEXP xptrSEXP, SEXP iSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type i(iSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(scanBEDMatrix(xptr, i, j));
    return rcpp_result_gen;
END_RCPP
}
// FastVLA_chunked_sota
int FastVLA_chunked_sota(const arma::mat& Y, SEXP Gptr, const arma::ivec& v_index, const arma::ivec& i_index, const arma::mat& X, const int& chunk_size, const std::string& dir, const std::vector<std::string> cnames, const std::vector<std::string> vnames, const std::string suffix, const double epss, const double& mafthresh);
RcppExport SEXP _FastReg_FastVLA_chunked_sota(SEXP YSEXP, SEXP GptrSEXP, SEXP v_indexSEXP, SEXP i_indexSEXP, SEXP XSEXP, SEXP chunk_sizeSEXP, SEXP dirSEXP, SEXP cnamesSEXP, SEXP vnamesSEXP, SEXP suffixSEXP, SEXP epssSEXP, SEXP mafthreshSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Gptr(GptrSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type v_index(v_indexSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type i_index(i_indexSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type chunk_size(chunk_sizeSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type dir(dirSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string> >::type cnames(cnamesSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string> >::type vnames(vnamesSEXP);
    Rcpp::traits::input_parameter< const std::string >::type suffix(suffixSEXP);
    Rcpp::traits::input_parameter< const double >::type epss(epssSEXP);
    Rcpp::traits::input_parameter< const double& >::type mafthresh(mafthreshSEXP);
    rcpp_result_gen = Rcpp::wrap(FastVLA_chunked_sota(Y, Gptr, v_index, i_index, X, chunk_size, dir, cnames, vnames, suffix, epss, mafthresh));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FastReg_scanBEDMatrix", (DL_FUNC) &_FastReg_scanBEDMatrix, 3},
    {"_FastReg_FastVLA_chunked_sota", (DL_FUNC) &_FastReg_FastVLA_chunked_sota, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_FastReg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
