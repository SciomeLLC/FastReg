CCACHE=ccache
CXX_STD=$(CCACHE) CXX11

RHDF5_LIBS=$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript" -e \
    'Rhdf5lib::pkgconfig("PKG_C_LIBS")')
RHDF5_CXXFLAGS=-I$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript" -e \
    'cat(system.file(package="Rhdf5lib","include"))')
ARMA_CXXFLAGS=-I$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript" -e \
    'cat(system.file(package="RcppArmadillo","include"))')

UNAME=($shell uname -s)
ifeq ($(UNAME),Darwin)
    PKG_CXXFLAGS=-I/opt/homebrew/include -I./lib  -I./include $(RCPP_CXXFLAGS) $(ARMA_CXXFLAGS) $(SHLIB_OPENMP_CXXFLAGS) $(RHDF5_CXXFLAGS) -DARMA_USE_HDF5 -DSTATS_ENABLE_ARMA_WRAPPERS -DARMA_64BIT_WORD
    PKG_LIBS=-L/opt/homebrew/lib $(SHLIB_OPENMP_CXXFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(RHDF5_LIBS) 
else
    SHLIB_OPENMP_CXXFLAGS=-fopenmp
    PKG_CXXFLAGS=-I./lib  -I./include $(RCPP_CXXFLAGS) $(ARMA_CXXFLAGS) $(SHLIB_OPENMP_CXXFLAGS) $(RHDF5_CXXFLAGS)  -DARMA_USE_HDF5 -DSTATS_ENABLE_ARMA_WRAPPERS -DARMA_64BIT_WORD -DARMA_WARN_LEVEL=0
    PKG_LIBS=$(SHLIB_OPENMP_CXXFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(RHDF5_LIBS)
endif

MAIN         = $(wildcard *.cpp) $(wildcard lib/*.cpp)
# MAIN_CODE    = $(wildcard lib/*.cpp)
OBJECTS      = $(MAIN:.cpp=.o)

# Include all C++ files in src/ and its subdirectories
# SOURCES=@SRC_SOURCES@ 

# Obtain the object files
# OBJECTS=$(SOURCES:.cpp=.o) 

# Make the shared object
all: $(SHLIB)

# Provide recipe to remove all objects
clean:
	@rm -f $(OBJECTS)
